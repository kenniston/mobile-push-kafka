version: '3.5'

volumes:
  graylog-mongo-data:
  graylog-data:
  graylog-elastic-data:
  grafana-data:

networks:
  mobilepush:

services:
  zookeeper:
    image: zookeeper:3.6.2
    container_name: zookeper-service
    restart: unless-stopped
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - mobilepush

  kafka:
    build:
      context: ./kafka
      dockerfile: Dockerfile
    image: kenniston/kafka:latest
    container_name: kafka-service
    ports:
      - 9092:9092
      - 8082:8082
      - 8083:8083
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CONNECT_REST_PORT: 8082
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONNECT_REST_ADVERTISED_HOST_NAME: localhost
      KAFKA_CONNECT_BOOTSTRAP_SERVERS: localhost:9092
      KAFKA_CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KAFKA_CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KAFKA_CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: 0
      KAFKA_CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: 0
      KAFKA_CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KAFKA_CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: 0
      KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: 0
      KAFKA_CREATE_TOPICS: "MobileSendPush:4:1,MobilePushResult:4:1"
      EXTRA_ARGS: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=8082:/usr/app/prom-jmx-agent-config.yml
    networks:
      - mobilepush
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    container_name: kafdrop-service
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    networks: 
      - mobilepush
    depends_on:
      - kafka
    
  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    image: kenniston/prometheus:latest
    container_name: prometheus-service
    ports:
      - "9090:9090"
    networks:
      - mobilepush
    depends_on:
      - kafka

  grafana:
    image: grafana/grafana:7.3.7
    container_name: grafana-service
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - mobilepush
    depends_on:
      - prometheus
  
  mongo:
    image: mongo:4.2
    container_name: mongo
    volumes:
      - graylog-mongo-data:/data/db
    networks:
      - mobilepush
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 60s
      timeout: 10s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.0
    container_name: elasticsearch
    volumes:
      - graylog-elastic-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      http.host: 0.0.0.0
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms2048m -Xmx2048m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    networks:
      - mobilepush
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:9200"]
      interval: 60s
      timeout: 10s
      retries: 5

  graylog:
    image: graylog/graylog:4.0.2
    container_name: graylog
    volumes:
      - graylog-data:/usr/share/graylog/data
    ports:
      - 5555:5555/udp     # GoLang Logger UDP
      - 6666:6666/udp     # Java Logger UDP
      - 9000:9000         # Graylog web interface and REST API
      - 12201:12201       # GELF TCP
      - 12201:12201/udp   # GELF TCP
      - 1514:1514         # Syslog TCP
      - 1514:1514/udp     # Syslog UDP
    environment:
      GRAYLOG_HTTP_EXTERNAL_URI: http://localhost:9000/
      GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      GRAYLOG_ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      GRAYLOG_ELASTICSEARCH_VERSION: 7
    restart: unless-stopped
    networks:
      - mobilepush
    depends_on:
      mongo:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  # node-exporter:
  #   image: prom/node-exporter:v1.0.1
  #   container_name: node_exporter
  #   restart: unless-stopped
  #   ports:
  #     - 9100:9100
  #   networks:
  #     - mobilepush

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:v0.38.7
  #   container_name: cadvisor
  #   privileged: true
  #   devices:
  #     - "/dev/kmsg:/dev/kmsg"
  #   restart: unless-stopped
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     - /dev/disk/:/dev/disk:ro
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - mobilepush

  # golang-sender:
  #   build:
  #     context: ./golang
  #     dockerfile: Dockerfile
  #   image: golang-sender:latest
  #   container_name: golang-sender-service
  #   stdin_open: true
  #   tty: true
  #   ports:
  #     - "6001:6001"
  #   environment:
  #     - SRV_LOG_LEVEL=debug
  #   restart: on-failure:3
  #   networks:
  #     - mobilepush